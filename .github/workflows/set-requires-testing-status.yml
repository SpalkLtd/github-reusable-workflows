# This updates the google "testing sheet" to update the status of 
# entries to "REQUIRES TESTING" when a commit is pushed to the 
# main branch of a repo containing "SA-[0-9]*"
# Requires a google Service Account https://cloud.google.com/iam/docs/service-accounts
# and that you share the spreadsheet with the service account's email as an editor.
name: Set Testing Sheet Status to REQUIRES TESTING

on:
  workflow_call:
    inputs:
      repo:
        description: 'Github repo string. Eg synchroniser'
        required: true
        type: string
      commit_msg:
        description: 'Github commit message. Usually: github.event.head_commit.message'
        required: true
        type: string
      worksheet_title:
        description: 'Worksheet title to edit'
        required: true
        type: string
    secrets:
      GSHEET_CLIENT_EMAIL:
        description: 'Github commit message. Usually: github.event.head_commit.message'
        required: true
      GSHEET_PRIVATE_KEY:
        description: 'Github commit message. Usually: github.event.head_commit.message'
        required: true
      SPREADSHEET_ID:
        description: 'Google Sheet ID'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update_status:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Finds the ticket number by parsing the the commit string with the regex /(SA-[0-9]*)/ and taking the first match
    - name: find_ticket_number
      id: find_ticket_number
      run: |
        # find the ticket number in the commit string
        TICKET_NUMBER=$(echo "${{ inputs.commit_msg }}" | grep -oP "(SA-[0-9]*) | head -n1")
        # store the ticket number in an output
        echo "TICKET_NUMBER=$TICKET_NUMBER" >> $GITHUB_OUTPUT

    # Finds the matching row in the google sheet by finding the ticket number in a column specified by the TICKET_NUMBER_COLUMN environment variable
    - id: 'read_worksheet'
      uses: SpalkLtd/gsheet.action@v1.2.0 # you can specify '@release' to always have the latest changes
      with:
        spreadsheetId: ${{ secrets.SPREADSHEET_ID }}
        commands: | # list of commands, specified as a valid JSON string
          [
            { "command": "getData", "args": { "range": "'${{ env.WORKSHEET_TITLE }}'!${{ env.REPO_COLUMN }}:${{ env.TICKET_NUMBER_COLUMN }}" }}
          ]
      env:
        GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
        GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
        TICKET_NUMBER_COLUMN: "C"
        REPO_COLUMN: "B"
        STATUS_COLUMN: "D"
        WORKSHEET_TITLE: "Dev QA"
    - name: find_matching_row
      id: find_matching_row
      env:
          RESULTS: ${{ steps.read_worksheet.outputs.results }}
      run: |
        echo "ticket number = ${{ steps.find_ticket_number.outputs.TICKET_NUMBER }}"
        ROW_NUMBER=$(echo "$RESULTS" |  jq -e '.results[0].result.rawData | map(.[0]=="${{ inputs.repo }}" and .[1]=="${{ steps.find_ticket_number.outputs.TICKET_NUMBER }}") | index(true) | tostring | tonumber + 1')
        echo "row = $ROW_NUMBER"
        echo "ROW_NUMBER=$ROW_NUMBER" >> $GITHUB_OUTPUT
    - id: 'update_worksheet'
      uses: SpalkLtd/gsheet.action@v1.2.0 # you can specify '@release' to always have the latest changes
      with:
        spreadsheetId: ${{ inputs.SPREADSHEET_ID }}
        commands: | # list of commands, specified as a valid JSON string
          [
            { "command": "updateData",
            "args": {
                "worksheetTitle": "$WORKSHEET_TITLE",
                "range": "${{ env.STATUS_COLUMN }}${{steps.find_matching_row.outputs.ROW_NUMBER }}",
                "data":[["REQUIRES TESTING"]]
              }
            }
          ]
      env:
        GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
        GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
        STATUS_COLUMN: "D"
        WORKSHEET_TITLE: ${{ inputs.worksheet_title }}


